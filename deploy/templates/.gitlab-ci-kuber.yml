stages:
  - prepare
  - build front
  - build push frontend
  - deploy
# - stop_deploy

image: '$DOCKER_IMAGE/$RUNNER_BASED'

prepare:
  stage: prepare
  script:
    - cat "$KUBE_ENV" >> build.env
  artifacts:
    reports:
      dotenv: build.env
  tags:
    - kuber-runner

build front:
  stage: build front
  image: "$DOCKER_IMAGE/$FRONT_BASE"
  tags:
    - kuber-runner
  script:
    - cat $NPMRC > .npmrc
    - npm i
    - npm run build
  artifacts:
    paths:
      - "$ARTIFACTS"
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"

build front feature:
  stage: build front
  image: "$DOCKER_IMAGE/$FRONT_BASE"
  tags:
    - kuber-runner
  script:
    - cat $NPMRC > .npmrc
    - npm i
    - BASE_URL="$CI_COMMIT_BRANCH" npm run build
  artifacts:
    paths:
      - dist/
  rules:
    - if: $CI_COMMIT_BRANCH =~ /feature*/

build push frontend feature:
  stage: build push frontend
  tags:
    - kuber-runner
  script:
    - docker login -u "$NEXUS_USER" -p "$NEXUS_PASS" "$DOCKER_IMAGE"
    - docker build -t "$DOCKER_IMAGE"/app/"$CI_PROJECT_NAME":${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA} -f deploy/Dockerfile-feature . --build-arg CI_COMMIT_BRANCH=$CI_COMMIT_BRANCH 
    - docker push "$DOCKER_IMAGE"/app/"$CI_PROJECT_NAME":${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}
    - docker rmi "$DOCKER_IMAGE"/app/"$CI_PROJECT_NAME":${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA} -f
  rules:
    - if: $CI_COMMIT_BRANCH =~ /feature*/

deploy feature:
  stage: deploy 
  image: '$DOCKER_IMAGE/$RUNNER_BASED_HELM'
  environment:
    name: ${CI_COMMIT_BRANCH}
    url: https://neon-cricket.sl-dev-stage.com/${CI_COMMIT_BRANCH}/login
    on_stop: stop_deploy
  before_script:
    - cd .feature
    - mkdir conf.d .kube
    - helm repo add default "https://gitlab.sportlevel-mc.com/api/v4/projects/52/packages/helm/beta" --username ${USER_HELM} --password ${USER_PASS}
    - |
      FILE_LIST=`curl -sk --header @"$HEADERS" https://gitlab.sportlevel-mc.com/api/v4/projects/3/repository/tree?path="$CI_PROJECT_NAME" | jq -r .[].name`
    - |
      for i in $FILE_LIST; do curl -v -sk --header @"$HEADERS" https://gitlab.sportlevel-mc.com/api/v4/projects/3/repository/files/"$CI_PROJECT_NAME"%2F$i/raw?ref="master" -o "conf.d"/$i;  done
    - export location=$CI_COMMIT_BRANCH
    - export service=$CI_COMMIT_REF_SLUG
    - envsubst '$service,$location' < conf.d/neon-cricket.feature.conf > conf.d/neon-cricket-feature.conf.tmp && mv conf.d/neon-cricket-feature.conf.tmp conf.d/neon-cricket-feature.conf
    - envsubst < namespace.yml > namespace.yml.tmp && mv namespace.yml.tmp namespace.yml
    - envsubst < Chart.yaml > Chart.yaml.tmp && mv Chart.yaml.tmp Chart.yaml
    - envsubst < values.yml > values.yml.tmp && mv values.yml.tmp values.yml
    - helm repo update && helm dependency update
    - helm template $CI_COMMIT_REF_SLUG . -f values.yml --debug
  script:
    - mkdir ~/.kube && cat $KUBECONFIG > /root/.kube/config && chmod 600 /root/.kube/config
    - export KUBECONFIG=/root/.kube/config
    - kubectl get namespace ${PROJECT_NAME} || kubectl create namespace ${PROJECT_NAME}
    - kubectl get secret kuber-cert -n ${PROJECT_NAME} || kubectl get secret kuber-cert -n default -o yaml | sed "s/default/${PROJECT_NAME}/" | kubectl apply -n ${PROJECT_NAME} -f -
    - cat ${SA_KUBECONFIG} | sed 's/default/'"${PROJECT_NAME}"'/' > .kube/kubeconfig
    - helm upgrade --install $CI_COMMIT_REF_SLUG . -f values.yml --namespace ${PROJECT_NAME} --cleanup-on-fail --kubeconfig $KUBECONFIG
    - kubectl get po -n ${PROJECT_NAME}
  tags:
    - kuber-runner
  rules:
    - if: $CI_COMMIT_BRANCH =~ /feature*/


stop_deploy:
  stage: deploy
  image: '$DOCKER_IMAGE/$RUNNER_BASED_HELM'
  variables:
    GIT_STRATEGY: "none"
  when: manual
  environment:
    name: ${CI_COMMIT_BRANCH}
    action: stop
  script:
    - mkdir ~/.kube && cat $KUBECONFIG > /root/.kube/config && chmod 600 /root/.kube/config
    - export KUBECONFIG=/root/.kube/config
    - helm uninstall ${CI_COMMIT_REF_SLUG} --namespace ${PROJECT_NAME}
  tags:
    - kuber-runner
  rules:
    - if: $CI_COMMIT_BRANCH =~ /feature*/

include:
  - project: 'sportlevel/kube-deploy'
    file: 'template/.gitlab-ci-frontend.yml'
